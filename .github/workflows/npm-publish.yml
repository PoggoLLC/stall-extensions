name: Stall Extensions NPM

on:
  push:
    branches:
      - main
    paths:
      - "extensions/**"
      - ".github/workflows/**"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Update submodules
        run: git submodule update --remote --recursive

      - uses: actions/setup-node@v4
        with:
          node-version: 20 # Consider using LTS version

      - run: npm ci
      - run: npm test

  publish-npm:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Update submodules
        run: git submodule update --remote --recursive

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
          scope: "@stallpos"

      - name: Verify NPM Authentication
        run: npm whoami
        env:
          NODE_AUTH_TOKEN: ${{ secrets.npm_token }}

      - name: Loop and patch + publish each extension
        run: |
          set -e

          for ext_dir in ./extensions/*/; do
            if [ -f "$ext_dir/package.json" ]; then
              echo "üì¶ Processing: $ext_dir"

              # Create a subshell to handle directory changes
              (
                cd "$ext_dir"

                # Patch package.json name
                original_name=$(jq -r '.name' package.json)

                if [[ "$original_name" != @stallpos/* ]]; then
                  unscoped_name=$(basename "$original_name")
                  new_name="@stallpos/$unscoped_name"

                  echo "üîß Patching name: $original_name ‚Üí $new_name"
                  jq --arg new_name "$new_name" '.name = $new_name' package.json > package.json.tmp
                  mv package.json.tmp package.json
                else
                  echo "‚úÖ Already scoped: $original_name"
                fi

                # Install, build, publish
                echo "Installing dependencies..."
                npm ci || npm install

                echo "Building..."
                npm run build || echo "‚ö†Ô∏è No build script"

                echo "Publishing..."
                npm publish --access public
              )
            fi
          done
        env:
          NODE_AUTH_TOKEN: ${{ secrets.npm_token }}
